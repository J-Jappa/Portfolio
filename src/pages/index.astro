---
import Layout from "../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

const projects = (await getCollection(
  "projects"
)) as CollectionEntry<"projects">[];

// Featured first, then by `order` (asc), then by date (newest first)
const sorted = [...projects].sort((a, b) => {
  const fa = a.data.featured ? 1 : 0;
  const fb = b.data.featured ? 1 : 0;
  if (fb - fa) return fb - fa;

  const oa = a.data.order ?? 0;
  const ob = b.data.order ?? 0;
  if (oa !== ob) return oa - ob;

  const da = a.data.date ? new Date(a.data.date).getTime() : 0;
  const db = b.data.date ? new Date(b.data.date).getTime() : 0;
  return db - da;
});
---

<Layout
  title="Projects"
  description="Engineering portfolio — projects and write-ups"
>
  <section class="mb-8">
    <h1 class="text-2xl font-semibold">Projects</h1>
    <p class="mt-1 opacity-80">
      Engineering portfolio — aerodynamics, embedded, DSP/ML.
    </p>
  </section>

  <div class="flex flex-col gap-8">
    {
      sorted.map(p => (
        <article class="rounded-2xl border p-5 transition hover:shadow-sm">
          <a
            href={`/projects/${p.slug}/`}
            class="no-underline"
            data-analytics="project"
            data-project={p.slug}
            data-title={p.data.title}
          >
            <h2 class="text-lg font-semibold">{p.data.title}</h2>
            <p class="mt-1 text-sm opacity-80">{p.data.summary}</p>

            <div class="mt-3 grid grid-cols-1 gap-2 sm:grid-cols-3">
              {(p.data.images ?? [])
                .slice(0, 3)
                .map((img: { src: string; alt?: string }) => (
                  <div class="aspect-[21/9] overflow-hidden rounded-lg">
                    <img
                      src={img.src}
                      alt={img.alt ?? p.data.title}
                      class="h-full w-full object-cover"
                      loading="lazy"
                      decoding="async"
                    />
                  </div>
                ))}
            </div>

            {p.data.tags?.length ? (
              <div class="mt-3 text-xs opacity-70">
                {p.data.tags.join(" · ")}
              </div>
            ) : null}
          </a>
        </article>
      ))
    }
  </div>
</Layout>
