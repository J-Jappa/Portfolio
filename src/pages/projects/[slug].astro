---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const projects = (await getCollection(
    "projects"
  )) as CollectionEntry<"projects">[];
  return projects.map(p => ({
    params: { slug: p.slug },
    props: { project: p },
  }));
}

const { project } = Astro.props as { project: CollectionEntry<"projects"> };
const { Content } = await project.render();
const p = project.data;
---

<Layout title={p.title} description={p.summary} ogImage={p.hero ?? undefined}>
  <article class="max-w-none">
    <a href="/" class="text-sm underline opacity-70">← All projects</a>

    <header class="mt-3 mb-6">
      <h1 class="text-2xl font-semibold">{p.title}</h1>
      <p class="mt-1 opacity-80">{p.summary}</p>
      {
        p.tags?.length ? (
          <div class="mt-2 text-xs opacity-70">{p.tags.join(" · ")}</div>
        ) : null
      }
    </header>

    {
      p.images?.length ? (
        <div class="grid gap-3 sm:grid-cols-3">
          {p.images.map((img: { src: string; alt?: string }, i: number) => (
            <>
              <button
                class="aspect-[21/9] w-full overflow-hidden rounded-xl"
                data-open={`dlg-${i}`}
              >
                <img
                  src={img.src}
                  alt={img.alt ?? p.title}
                  class="h-full w-full object-cover"
                  loading="lazy"
                  decoding="async"
                />
              </button>
              <dialog
                id={`dlg-${i}`}
                class="rounded-xl p-0 backdrop:bg-black/60"
              >
                <img src={img.src} alt={img.alt ?? p.title} />
                <form method="dialog">
                  <button class="absolute top-2 right-2 rounded-md border bg-white/80 px-3 py-1">
                    Close
                  </button>
                </form>
              </dialog>
            </>
          ))}
        </div>
      ) : null
    }

    <script>
      document.querySelectorAll("[data-open]").forEach(btn => {
        const id = btn.getAttribute("data-open");
        const dlg = document.getElementById(id);
        btn.addEventListener("click", () => dlg?.showModal());
        dlg?.addEventListener("click", e => {
          if (e.target === dlg) dlg.close();
        });
      });
    </script>

    {
      p.outcomes?.length ? (
        <section class="mt-6">
          <h2 class="text-xl font-semibold">Outcomes</h2>
          <ul class="ml-6 list-disc">
            {p.outcomes.map((o: string) => (
              <li>{o}</li>
            ))}
          </ul>
        </section>
      ) : null
    }

    <section
      class="prose mt-6 max-w-none dark:prose-invert prose-img:mx-auto prose-img:w-3/4 prose-img:rounded-xl sm:prose-img:w-2/3 lg:prose-img:w-1/2"
    >
      <Content />
    </section>

    {
      (p.repo || p.link) && (
        <p class="mt-6 text-sm">
          {p.repo && (
            <a class="underline" href={p.repo} target="_blank" rel="noopener">
              Repository
            </a>
          )}
          {p.repo && p.link ? " · " : ""}
          {p.link && (
            <a class="underline" href={p.link} target="_blank" rel="noopener">
              Live/demo
            </a>
          )}
        </p>
      )
    }
  </article>
</Layout>
